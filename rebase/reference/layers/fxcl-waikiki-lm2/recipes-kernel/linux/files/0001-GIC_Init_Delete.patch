From 9e2a399dec0888822df841859fa5bc7ea75ec1ed Mon Sep 17 00:00:00 2001
From: Auto Configured <auto.configured>
Date: Wed, 4 Mar 2015 13:55:19 +0900
Subject: [PATCH 1/1] GIC_Init_Delete


Signed-off-by: Auto Configured <auto.configured>
---
 drivers/irqchip/irq-gic.c |   11 +++++++++++
 1 files changed, 11 insertions(+), 0 deletions(-)

diff --git a/drivers/irqchip/irq-gic.c b/drivers/irqchip/irq-gic.c
index 183da29..1da3755 100644
--- a/drivers/irqchip/irq-gic.c
+++ b/drivers/irqchip/irq-gic.c
@@ -254,12 +254,15 @@ static int gic_set_affinity(struct irq_data *d, const struct cpumask *mask_val,
 	if (cpu >= NR_GIC_CPU_IF || cpu >= nr_cpu_ids)
 		return -EINVAL;
 
+#ifdef	CONFIG_ARCH_LM2
+#else	/* CONFIG_ARCH_LM2 */
 	raw_spin_lock(&irq_controller_lock);
 	mask = 0xff << shift;
 	bit = gic_cpu_map[cpu] << shift;
 	val = readl_relaxed(reg) & ~mask;
 	writel_relaxed(val | bit, reg);
 	raw_spin_unlock(&irq_controller_lock);
+#endif	/* CONFIG_ARCH_LM2 */
 
 	return IRQ_SET_MASK_OK;
 }
@@ -383,12 +386,15 @@ static void __init gic_dist_init(struct gic_chip_data *gic)
 
 	writel_relaxed(0, base + GIC_DIST_CTRL);
 
+#ifndef	CONFIG_ARCH_LM2
 	/*
 	 * Set all global interrupts to be level triggered, active low.
 	 */
 	for (i = 32; i < gic_irqs; i += 16)
 		writel_relaxed(0, base + GIC_DIST_CONFIG + i * 4 / 16);
+#endif	/* CONFIG_ARCH_LM2 */
 
+#ifndef	CONFIG_ARCH_LM2
 	/*
 	 * Set all global interrupts to this CPU only.
 	 */
@@ -397,19 +403,24 @@ static void __init gic_dist_init(struct gic_chip_data *gic)
 	cpumask |= cpumask << 16;
 	for (i = 32; i < gic_irqs; i += 4)
 		writel_relaxed(cpumask, base + GIC_DIST_TARGET + i * 4 / 4);
+#endif	/* CONFIG_ARCH_LM2 */
 
+#ifndef	CONFIG_ARCH_LM2
 	/*
 	 * Set priority on all global interrupts.
 	 */
 	for (i = 32; i < gic_irqs; i += 4)
 		writel_relaxed(0xa0a0a0a0, base + GIC_DIST_PRI + i * 4 / 4);
+#endif	/* CONFIG_ARCH_LM2 */
 
+#ifndef	CONFIG_ARCH_LM2
 	/*
 	 * Disable all interrupts.  Leave the PPI and SGIs alone
 	 * as these enables are banked registers.
 	 */
 	for (i = 32; i < gic_irqs; i += 32)
 		writel_relaxed(0xffffffff, base + GIC_DIST_ENABLE_CLEAR + i * 4 / 32);
+#endif	/* CONFIG_ARCH_LM2 */
 
 	writel_relaxed(1, base + GIC_DIST_CTRL);
 }
-- 
1.7.1

