From 764c1d9a2b95b211b0b50bcbf02e4dc59964d542 Mon Sep 17 00:00:00 2001
From: jthomas <jacob.thomas@windriver.com>
Date: Wed, 11 May 2016 11:33:28 +0900
Subject: [PATCH 026/170] 0025-add-driver-resource


diff --git a/arch/arm/mach-lm2/include/mach/irqs.h b/arch/arm/mach-lm2/include/mach/irqs.h
index fb9ac9e..97c9066 100644
--- a/arch/arm/mach-lm2/include/mach/irqs.h
+++ b/arch/arm/mach-lm2/include/mach/irqs.h
@@ -16,8 +16,11 @@
 #define NR_IRQS	256
 
 #define	LM2_IRQ_BASE	32
+
 #define	LM2_IRQ_RTC		(LM2_IRQ_BASE + 2)
 
+#define	LM2_IRQ_CIPUI		(LM2_IRQ_BASE + 32)
+
 #define	LM2_IRQ_TIMER_0		(LM2_IRQ_BASE + 4)
 #define	LM2_IRQ_TIMER_1		(LM2_IRQ_BASE + 5)
 #define	LM2_IRQ_TIMER_2		(LM2_IRQ_BASE + 6)
@@ -46,6 +49,8 @@
 
 #define	LM2_IRQ_SDIO_0_STAT	(LM2_IRQ_BASE + 99)
 #define	LM2_IRQ_SDIO_0_WAKE	(LM2_IRQ_BASE + 100)
+#define	LM2_IRQ_SDIO_1_STAT	(LM2_IRQ_BASE + 101)
+#define	LM2_IRQ_SDIO_1_WAKE	(LM2_IRQ_BASE + 102)
 
 #define	LM2_IRQ_UART_0		(LM2_IRQ_BASE + 18)
 #define	LM2_IRQ_UART_1		(LM2_IRQ_BASE + 29)
diff --git a/arch/arm/mach-lm2/include/mach/motherboard.h b/arch/arm/mach-lm2/include/mach/motherboard.h
index 162d977..4325c07 100644
--- a/arch/arm/mach-lm2/include/mach/motherboard.h
+++ b/arch/arm/mach-lm2/include/mach/motherboard.h
@@ -56,6 +56,8 @@
 #define	LM2_USB2_PHY		(LM2_REGS_0 + 0x00408000)
 #define	LM2_USB3		(LM2_REGS_0 + 0x04500000)
 #define	LM2_USB2		(LM2_REGS_0 + 0x04600000)
+#define LM2_SDIO0_BASE          (LM2_REGS_0 + 0x00440200)       /* SD0 slot1 */
+#define LM2_SDIO1_BASE          (LM2_REGS_0 + 0x00450100)       /* SD1 slot0 */
 /*
  * Physical addresses, offset from V2M_PA_CS7
  */
diff --git a/arch/arm/mach-lm2/lm2.c b/arch/arm/mach-lm2/lm2.c
index 8d3205d..9020e77 100644
--- a/arch/arm/mach-lm2/lm2.c
+++ b/arch/arm/mach-lm2/lm2.c
@@ -7,6 +7,8 @@
  */
 
 #include <linux/device.h>
+#include <linux/amba/bus.h>
+#include <linux/amba/mmci.h>
 #include <linux/io.h>
 #include <linux/init.h>
 #include <linux/of_address.h>
@@ -14,11 +16,12 @@
 #include <linux/of_irq.h>
 #include <linux/of_platform.h>
 #include <linux/platform_device.h>
-#include <linux/dma-mapping.h>
 #include <linux/ata_platform.h>
+#include <linux/smsc911x.h>
 #include <linux/memblock.h>
 #include <linux/spinlock.h>
 #include <linux/device.h>
+#include <linux/usb/isp1760.h>
 #include <linux/clkdev.h>
 #include <linux/mtd/physmap.h>
 #include <linux/serial_8250.h>
@@ -34,8 +37,11 @@
 #include <asm/mach/time.h>
 #include <asm/hardware/arm_timer.h>
 #include <asm/hardware/cache-l2x0.h>
+#include <asm/hardware/gic.h>
+#include <asm/hardware/timer-sp.h>
+#include <asm/hardware/sp810.h>
 #include <linux/stmmac.h>
-#include <linux/irqchip/arm-gic.h>
+
 /*
  * BSPs include files 
  */
@@ -117,14 +123,9 @@ static void __init lm2_timer_init(void)
 	void	__iomem	*clksrc_timer;
 	void	__iomem	*clkevt_timer;
 
-lm2_printk(0xfc000000,"lm2_timer_init\n");
 /*	clksrc_timer = ioremap(LM2_TIMER_BASE + 0x38, 0x0c);	*/
 	clksrc_timer = ioremap(LM2_TIMER_BASE+0x10, 0x10);
-sprintf(buf,"Timer1=%x\n",clksrc_timer);
-lm2_printk(0xfc000000,buf);
 	clkevt_timer = ioremap(LM2_TIMER_BASE+0x2c,0x0c);
-sprintf(buf,"Timer0=%x\n",clkevt_timer);
-lm2_printk(0xfc000000,buf);
 	lm2_clocksource_init(clksrc_timer);
 	lm2_clockevent_init(LM2_IRQ_TIMER_0,clkevt_timer);
 }
@@ -172,47 +173,7 @@ static int	__init lm2_console_init(void)
 
 /*
  * I2C
- * 	resource 0:misc register for used interrupt
- * 	resource 1:i2c registers
  */
-static	struct resource lm2_i2c_resource[] = {
-	{
-		.name	= "lm2-cip-ui",
-		.start	= LM2_CIP_UI_BASE,
-		.end	= LM2_CIP_UI_BASE+0x60,
-		.flags	= IORESOURCE_MEM,
-	},
-	{
-		.name	= "lm2-i2c-mmio",
-		.start	= LM2_CIP_UI_BASE+0x100,
-		.end	= LM2_CIP_UI_BASE+0x200,
-		.flags	= IORESOURCE_MEM,
-	},
-	{
-		.name	= "cip-ui-int",
-		.start	= 64,
-		.end	= 64,
-		.flags	= IORESOURCE_IRQ,
-	}
-};
-
-/*
- * RTC resource
- */
-static	struct resource lm2_rtc_resource [] = {
-	{
-		.name	= "lm2-rtc",
-		.start	= LM2_RTC_BASE+0x10,
-		.end	= LM2_RTC_BASE+0x20,
-		.flags	= IORESOURCE_MEM,
-	},
-};
-
-static	struct platform_device lm2_rtc_device = {
-	.name		= "lm2-rtc",
-	.id		= -1,
-	.resource	= lm2_rtc_resource,
-};
 
 /*
  * Ethernet Controller
@@ -276,6 +237,24 @@ static struct platform_device lm2_eth_device = {
 };
 
 /*
+ * GPIO
+ */
+static	struct resource	lm2_gpio_resource[]={
+	{
+		.start	= 0x04080000,
+		.end	= 0x04080100,
+		.flags	= IORESOURCE_MEM,
+	},
+};
+
+static	struct platform_device	lm2_gpio_device = {
+	.name		= "mmio-gpio",
+	.id		= -1,
+	.resource	= lm2_gpio_resource,
+	.num_resources	= ARRAY_SIZE(lm2_gpio_resource),
+};
+
+/*
  * USB Host Device
  */
 static struct resource lm2_usb_resources[] = {
@@ -291,18 +270,121 @@ static struct resource lm2_usb_resources[] = {
 };
 
 /*
- * non bus master device
- */
+ *  * SDIO
+ *   */
+static struct resource lm2_sdhci0_resources[] = {
+        [0] = {
+                .start  = LM2_SDIO0_BASE,
+                .end    = LM2_SDIO0_BASE + 0x100,
+                .flags  = IORESOURCE_MEM,
+        },
+        [1] = {
+                .start  = LM2_IRQ_SDIO_0_STAT,
+                .end    = LM2_IRQ_SDIO_0_STAT,
+                .flags  = IORESOURCE_IRQ,
+        },
+};
+
+static struct platform_device lm2_sdhci0_device = {
+        .name           = "sdhci-lm2",
+        .id             = 0,
+        .num_resources  = ARRAY_SIZE(lm2_sdhci0_resources),
+        .resource       = lm2_sdhci0_resources,
+};
+
+static struct resource lm2_sdhci1_resources[] = {
+        [0] = {
+                .start  = LM2_SDIO1_BASE,
+                .end    = LM2_SDIO1_BASE + 0x100,
+                .flags  = IORESOURCE_MEM,
+        },
+        [1] = {
+                .start  = LM2_IRQ_SDIO_1_STAT,
+                .end    = LM2_IRQ_SDIO_1_STAT,
+                .flags  = IORESOURCE_IRQ,
+        },
+};
+
+static struct platform_device lm2_sdhci1_device = {
+        .name           = "sdhci-lm2",
+        .id             = 1,
+        .num_resources  = ARRAY_SIZE(lm2_sdhci1_resources),
+        .resource       = lm2_sdhci1_resources,
+};
+
 /*
-static AMBA_APB_DEVICE(wdt,   "mb:wdt",   0, V2M_WDT, IRQ_V2M_WDT, NULL);
-static AMBA_APB_DEVICE(rtc,   "mb:rtc",   0, V2M_RTC, IRQ_V2M_RTC, NULL);
+ * RTC
+ */
+static  struct resource lm2_rtc_resource[] ={
+        {
+                .start  = 0x04030000,
+                .end    = 0x04030100,
+                .flags  = IORESOURCE_MEM,
+        },
+};
+
+static	struct platform_device lm2_rtc_device = {
+	.name		= "lm2-rtc",
+	.id		= -1,
+	.resource	= lm2_rtc_resource,
+	.num_resources	= ARRAY_SIZE(lm2_rtc_resource),
 
-static struct amba_device *v2m_amba_devs[] __initdata = {
-	&wdt_device,
-	&rtc_device,
 };
 
-*/
+static	struct resource	lm2_i2c_resource[] = {
+	{
+		.start	= 0x041F0000,
+		.end	= 0x041F00FF,
+		.flags	= IORESOURCE_MEM,
+	},
+	{
+		.start	= 0x041F0100,
+		.end	= 0x041F01FF,
+		.flags	= IORESOURCE_MEM,
+	},
+	{
+		.start	= LM2_IRQ_CIPUI,
+		.end	= LM2_IRQ_CIPUI,
+		.flags	= IORESOURCE_IRQ,
+	},
+};
+
+static	struct platform_device lm2_i2c_device = {
+	.name		= "lm2-eeprom",
+	.id		= -1,
+	.resource	= lm2_i2c_resource,
+	.num_resources	= ARRAY_SIZE(lm2_i2c_resource),
+};
+
+void __init lm2_sdhci_init(void)
+{
+//      void __iomem *virt_addr;
+
+	/* SDIO0 HRS0(slot1) */
+//      virt_addr = ioremap(0x00440000,0x100);
+//      writel(0x00000000, virt_addr + 0x20); /* SDIO0_HRS8 (SDIO0_SRS16_1=>0x40) */
+//      writel(0x00000000, virt_addr + 0x24); /* SDIO0_HRS9 (SDIO0_SRS17_1=>0x44) */
+//      writel(0x00000000, virt_addr + 0x28); /* SDIO0_HRS10(SDIO0_SRS18_1=>0x48) */
+//      writel(0x80480004, virt_addr + 0x70); /* SDIO0_HRS28(SDIO0_SRS24_1=>0x60) */
+//      writel(0x00000000, virt_addr + 0x74); /* SDIO0_HRS29(SDIO0_SRS25_1=>0x64) */
+//      writel(0x00000000, virt_addr + 0x78); /* SDIO0_HRS30(SDIO0_SRS26_1=>0x68) */
+//      writel(0x00000000, virt_addr + 0x7c); /* SDIO0_HRS31(SDIO0_SRS27_1=>0x6c) */
+//      iounmap(virt_addr);
+//      platform_device_register(&lm2_sdhci0_device);
+
+	/* SDIO1 HRS0(slot0) */
+//      virt_addr = ioremap(0x00450000,0x100);
+//      writel(0x00000000, virt_addr + 0x10); /* SDIO0_HRS4 (SDIO0_SRS16_0=>0x40) */
+//      writel(0x00000000, virt_addr + 0x14); /* SDIO0_HRS5 (SDIO0_SRS17_0=>0x44) */
+//      writel(0x00000000, virt_addr + 0x18); /* SDIO0_HRS6 (SDIO0_SRS18_0=>0x48) */
+//      writel(0x80000002, virt_addr + 0x60); /* SDIO0_HRS24(SDIO0_SRS24_0=>0x60) */
+//      writel(0x00000000, virt_addr + 0x64); /* SDIO0_HRS25(SDIO0_SRS25_0=>0x64) */
+//      writel(0x00000000, virt_addr + 0x68); /* SDIO0_HRS26(SDIO0_SRS26_0=>0x68) */
+//      writel(0x00000000, virt_addr + 0x6c); /* SDIO0_HRS27(SDIO0_SRS27_0=>0x6c) */
+//      iounmap(virt_addr);
+	platform_device_register(&lm2_sdhci1_device);
+}
+
 static void __init lm2_init_early(void)
 {
 	lm2_printk(0xfc000000,"lm2_init_early\n");
@@ -318,26 +400,8 @@ static void lm2_restart(char str, const char *cmd)
 	printk(KERN_EMERG "Unable to reboot\n");
 }
 
-//static	void	__init	lm2_early_serial_setup(void)
-//{
-//#ifdef	CONFIG_SERIAL_8250_CONSOLE
-//	static struct uart_port	lm2_console_port = {
-//		.irq 		= LM2_IRQ_UART_1,
-//		.iotype		= UPIO_MEM,
-//		.flags		= UPF_SKIP_TEST,
-//		.regshift	= 0,
-//		.uartclk	= LM2_UART1_CLK,
-//		.line		= 0,
-//	};
-//	lm2_console_port.membase = ioremap(LM2_UART_1_BASE,0x32);
-//
-//	early_serial_setup(&lm2_console_port);
-//#endif	/* CONFIG_SERIAL_8250_CONSOLE */
-//}
-
 static void __init lm2_map_io(void)
 {
-	lm2_printk(0xfc160000,"lm2_map_io\n");
 	iotable_init(lm2_io_desc, ARRAY_SIZE(lm2_io_desc));
 #ifdef CONFIG_SERIAL_8250_CONSOLE
 //	lm2_early_serial_setup();
@@ -354,15 +418,10 @@ static void __init lm2_init_irq(void)
 	void __iomem	*virt_cpui;
 
 	virt_dist = ioremap(LM2_GIC_DIST,SZ_4K);
-sprintf(buf,"GIC:Dist=%x\n",virt_dist);
-lm2_printk(0xfc000000,buf);
 	virt_cpui = ioremap(LM2_GIC_CPU,SZ_4K);
-sprintf(buf,"GIC:CPU=%x\n",virt_cpui);
-lm2_printk(0xfc000000,buf);
 
 	lm2_printk(0xfc000000,"lm2_init_irq\n");
 	gic_init_bases(0,29,ioremap(LM2_GIC_DIST,SZ_4K),ioremap(LM2_GIC_CPU,SZ_4K),0,NULL);
-//	lm2_early_serial_setup();
 	lm2_printk(0xfc000000,"lm2_init_irq end\n");
 }
 
@@ -388,19 +447,21 @@ static void __init lm2_init(void)
 {
 	void __iomem *virt_addr;
 
-	lm2_printk(0xfc000000,"lm2_init\n");
 	virt_addr = ioremap(LM2_UART_1_BASE,0x32);
 	lm2_serial_resource[0].membase = virt_addr;
 	virt_addr = ioremap(LM2_UART_0_BASE,0x32);
 	lm2_serial_resource[1].membase = virt_addr;
 	platform_device_register(&lm2_serial_device);
 	platform_device_register(&lm2_eth_device);
-	lm2_printk(0xfc000000,"lm2_init:platform_register end\n");
 #ifdef	CONFIG_SATA_AHCI_PLATFORM
 	lm2_sata_register();
 #endif	/* CONFIG_SATA_AHCI_PLATFORM */
-	lm2_usb_register();
+//	lm2_usb_register();
+        lm2_sdhci_init();
+
+	platform_device_register(&lm2_gpio_device);
 	platform_device_register(&lm2_rtc_device);
+	platform_device_register(&lm2_i2c_device);
 }
 
 MACHINE_START(LM2, "FujiXerox Waikiki")
@@ -443,10 +504,7 @@ static u32 osc;
  */
 void __init lm2_dt_init_early(void)
 {
-	struct device_node *node;
-	u32 dt_hbi;
-
-	node = of_find_compatible_node(NULL, NULL, "arm,vexpress-sysreg");
+	return;
 }
 /*
  * GIC find data 
@@ -455,7 +513,7 @@ static  struct of_device_id lm2_irq_match[] __initdata = {
 	{ .compatible = "arm,cortex-a9-gic", .data = gic_of_init, },
 	{}
 };
-i
+
 /*
  * General Interrupt Controller Initialize by DTB
  */
@@ -514,7 +572,6 @@ DT_MACHINE_START(LM2_DT, "FujiXerox Waikiki")
 	.init_irq	= lm2_dt_init_irq,
 	.init_time	= &lm2_dt_timer,
 	.init_machine	= lm2_dt_init,
-	.restart	= v2m_restart,
 MACHINE_END
 
 #endif	/* CONFIG_ARCH_LM2_DT */
-- 
1.7.1

