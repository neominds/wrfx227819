From cc3f5dc90ca17163c2252f21485d5696cb90dee5 Mon Sep 17 00:00:00 2001
From: jthomas <jacob.thomas@windriver.com>
Date: Wed, 11 May 2016 11:36:26 +0900
Subject: [PATCH 157/170] 0202-fx_wrl6.0_WrChange


diff --git a/arch/arm/boot/compressed/bootLoaderInfo.h b/arch/arm/boot/compressed/bootLoaderInfo.h
new file mode 100644
index 0000000..39dd453
--- /dev/null
+++ b/arch/arm/boot/compressed/bootLoaderInfo.h
@@ -0,0 +1,95 @@
+/* bootLoaderInfo.h 0.1 -- Header for OSs boot information from bootLoader */
+/* Copyright(C)2015 by Fuji Xerox Co., Ltd. All rights reserved. */
+/*
+DESCRIPTION
+*/
+/*
+Modification History
+--------------------
+0000, 
+*/
+
+#ifndef _BOOT_BOOTINFO_H_
+#define _BOOT_BOOTINFO_H_
+
+#define BOOT_BOOTINFO_MAGIC			(0x2CB1)
+
+/* To Linux Kernel */
+/* PWBAs 4GB, 2GB, 1GB Memory */
+#define BOOT_LINUX_ENTRY			(0x10000000)    /* Entry Point for Linux kernel */
+#define BOOT_LINUX_INITRD_ENTRY		(0x30000000)    /* initrd load location */
+#define BOOT_LINUX_BOOTPARAM_SIZE	(512)			/* Must be a multiple of 512bytes */
+#define BOOT_LINUX_BOOTINFO_ADDR	(BOOT_LINUX_ENTRY-4096)
+
+/* To osIPoC */
+#define BOOT_OSIPOC_BOOTINFO_ADDR	(0x00810000-4096) /* Temp: CA7 Entry-4096 */ /*(0x04E00000)*/
+
+/* for TOKIWA */
+#define LINUX_KERNEL_LOAD_ADDRESS_TOKIWA	( BOOT_LINUX_ENTRY )
+#define LINUX_INITRD_LOAD_ADDRESS_TOKIWA	( BOOT_LINUX_INITRD_ENTRY )
+#define TOKIWA_BOOTPARAM_NVRAM		( 0x200 )
+#define TOKIWA_MEMCONFIG_SZ_IN_BYTES	(512)
+
+/* Info from BootLoader. */
+typedef struct {
+    unsigned int  magic;
+    unsigned char macaddr[8];
+    unsigned int  reserved;
+    unsigned long long ramsize;							/* 4GB/2GB/1GB */
+    unsigned char bootparam[BOOT_LINUX_BOOTPARAM_SIZE];
+    unsigned long initrd_addr;							/* initrdを置くアドレス */
+	unsigned long initrd_size;							/* initrdのサイズ[byte] */
+	unsigned long firm_addr;							/* OSIPoC のstartアドレス */
+	unsigned long firm_size;							/* OSIPoC のサイズ[byte] */
+	unsigned long psaver_mode;							/* Cold Boot - 0 / SWOFF復帰 - 1 / CPUOFF復帰 - 2 */
+	unsigned long pwba_rev;								/* PWBA Revision */
+} boot_infoBootLoader_t;
+
+/* boot_infoMemConfig_t : Copy from SD/EMMC
+ */
+typedef struct {
+    unsigned int  magic;
+    unsigned char data[TOKIWA_MEMCONFIG_SZ_IN_BYTES];	/* copied from SD/EMMC Data Poitedd in Compatiblity ID MEMC */
+} boot_infoMemConfig_t;
+
+/* boot_infoInSeepRom_t : Copy from SEEPROM
+ *   Unit7
+ *   Unit4
+ */
+typedef struct {
+    unsigned int  magic;
+    unsigned char Unit4[256];	/* copied from SEEPROM Unit4 */
+    unsigned char Unit7[256];	/* copied from SEEPROM Unit7 */
+} boot_infoInSeepRom_t;
+
+/* boot_infoInNVMem_t : Copy from NVMem
+ *   OS Area - 0x00 - 0xFF
+ */
+typedef struct {
+    unsigned int  magic;
+    unsigned char OSArea[256];	/* copied from NVMem 0x00-0xFF */
+} boot_infoInNVMem_t;
+
+/* Unified Boot Information struct
+ */
+typedef struct {
+	/* Information Generated by bootLoader */
+	boot_infoBootLoader_t	bootInfoBootLoader;
+	char reserve01[1024-sizeof(boot_infoBootLoader_t)];
+
+	/* Memory Configuration Information on SD/EMMC */
+	boot_infoMemConfig_t	bootInfoMemConfig;
+	char reserve02[1024-sizeof(boot_infoMemConfig_t)];
+
+	/* Information on SEEPROM */
+	boot_infoInSeepRom_t	bootInfoInSeepRom;
+	char reserve03[1024-sizeof(boot_infoInSeepRom_t)];
+
+	/* Information on NVMem */
+	boot_infoInNVMem_t		bootInfoInNVMem;
+	char reserve04[ 512-sizeof(boot_infoInNVMem_t)];
+
+} boot_bootinfo_t, *pboot_bootinfo_t;
+
+
+#endif /* _BOOT_BOOTINFO_H_ */
diff --git a/arch/arm/include/asm/lm2_pm_logger.h b/arch/arm/include/asm/lm2_pm_logger.h
new file mode 100644
index 0000000..f1ee1a1
--- /dev/null
+++ b/arch/arm/include/asm/lm2_pm_logger.h
@@ -0,0 +1,31 @@
+/*
+ * Copyright (C) 2015 Fuji Xerox Co.,Ltd. All rights reserved.
+ *
+ * Author:
+ *   Atsushi Takeshita <atsushi.takeshita@fujixerox.co.jp>, Dec 2015
+ *
+ * This is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along with
+ * this program; if not, write to the Free Software Foundation, Inc., 59
+ * Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+ *
+ * The full GNU General Public License is included in this distribution in the
+ * file called COPYING.
+ */
+#ifndef __LM2_PM_LOGGER__	
+#define	__LM2_PM_LOGGER__
+
+#define energyTraceKernel(msg) lm2_pm_stamp(__func__, __LINE__, msg)
+void lm2_pm_stamp(const char *func, unsigned int line, char *msg);
+void lm2_pm_stamp_sysfs_entry(void);
+
+#endif
diff --git a/arch/arm/kernel/process.c b/arch/arm/kernel/process.c
index 34b8c5a..308d2d3 100644
--- a/arch/arm/kernel/process.c
+++ b/arch/arm/kernel/process.c
@@ -40,8 +40,6 @@
 #include <asm/stacktrace.h>
 #include <asm/mach/time.h>
 
-#include <linux/fxmodule/kernelOsddi.h>
-
 #ifdef CONFIG_CC_STACKPROTECTOR
 #include <linux/stackprotector.h>
 unsigned long __stack_chk_guard __read_mostly;
@@ -212,8 +210,7 @@ void machine_halt(void)
 {
 	smp_send_stop();
 #ifdef	CONFIG_ARCH_LM2
-	//a7_softirq(6);  // shutdown IPI
-	kernelGioNegate(OS_GIO_HW_RST); /* HW Reset */
+	a7_softirq(6);  // shutdown IPI
 #endif	/* CONFIG_ARCH_LM2 */
 
 	local_irq_disable();
@@ -253,10 +250,6 @@ void machine_restart(char *cmd)
 
 	/* Give a grace period for failure to restart of 1s */
 	mdelay(1000);
-#ifdef	CONFIG_ARCH_LM2
-	//a7_softirq(6);  // shutdown IPI
-	kernelGioNegate(OS_GIO_HW_RST); /* HW Reset */
-#endif	/* CONFIG_ARCH_LM2 */
 
 	/* Whoops - the platform was unable to reboot. Tell the user! */
 	printk("Reboot failed -- System halted\n");
diff --git a/arch/arm/kernel/smp.c b/arch/arm/kernel/smp.c
index 14af33b..dc4756d 100644
--- a/arch/arm/kernel/smp.c
+++ b/arch/arm/kernel/smp.c
@@ -668,13 +668,13 @@ void handle_IPI(int ipinr, struct pt_regs *regs)
 #ifdef CONFIG_FX_FWCMD_IPI_WITH_A7
 	case IPI_RX_CMD_NOT_EMPTY:
 		irq_enter();
-		wakeup_for_cmd_not_empty();
+//		wakeup_for_cmd_not_empty();
 		irq_exit();
                 break;
 
 	case IPI_RX_CMD_NOT_FULL:
 		irq_enter();
-		wakeup_for_cmd_not_full();
+//		wakeup_for_cmd_not_full();
 		irq_exit();
                 break;
 #endif
diff --git a/arch/arm/mach-lm2/Makefile b/arch/arm/mach-lm2/Makefile
index 5a5168e..daabaff 100644
--- a/arch/arm/mach-lm2/Makefile
+++ b/arch/arm/mach-lm2/Makefile
@@ -2,7 +2,7 @@
 # Makefile for the linux kernel.
 #
 
-obj-y					:= lm2.o usb.o clock.o timer_alm.o lm2_pm.o lm2_pm_logger.o
+obj-y					:= lm2.o usb.o clock.o timer_alm.o lm2_pm.o 
 obj-$(CONFIG_SMP)			+= platsmp.o
 obj-$(CONFIG_SATA_AHCI_PLATFORM)	+= sata.o
 obj-$(CONFIG_MMC_SDHCI_PLTFM)		+= sdhci.o
diff --git a/arch/arm/mach-lm2/lm2.c b/arch/arm/mach-lm2/lm2.c
index 05b5979..a921646 100644
--- a/arch/arm/mach-lm2/lm2.c
+++ b/arch/arm/mach-lm2/lm2.c
@@ -46,7 +46,32 @@
 
 #include "core.h"
 
+#if 1	/* WR Change */
+#define OS_PRODUCT_ID_BOMBORA    0x33
+#define OS_PRODUCT_ID_KAIMANA    0x34
+#define OS_PRODUCT_ID_TOMBOLO    0x3b
+#define OS_PRODUCT_ID_MARIS      0x3c
+int kernelGetProductId(void){
+        int* productid;
+        struct device_node *node;
+
+        node = of_find_node_by_path("/bootinfo");
+        if(node == NULL){
+                printk(KERN_ERR "[kernelGetProductId]of_find_node_by_path failed\n");
+                return ERROR;
+        }
+
+        productid = (int *)of_get_property(node, "productid", NULL);
+        if(productid == NULL){
+                printk(KERN_ERR "[kernelGetProductId]of_get_property failed\n");
+                return ERROR;
+        }
+
+        return *productid;
+}
+#else
 #include <linux/fxmodule/kernelOsddi.h>
+#endif
 
 extern	void	lm2_clocksource_init(void __iomem *gpt);
 extern	void	lm2_clockevent_init(int irq, void __iomem *gpt);
diff --git a/arch/arm/mach-lm2/lm2_pm.c b/arch/arm/mach-lm2/lm2_pm.c
index 38e893e..ac4ad7f 100644
--- a/arch/arm/mach-lm2/lm2_pm.c
+++ b/arch/arm/mach-lm2/lm2_pm.c
@@ -26,8 +26,8 @@
 #include <linux/spi/xspi.h>
 #include <linux/debugfs.h>
 
-#include <linux/fxmodule/overlay.h>
-#include <linux/fxmodule/kernelOsddi.h>
+//#include <linux/fxmodule/overlay.h>
+//#include <linux/fxmodule/kernelOsddi.h>
 
 #include "core.h"
 #include <asm/lm2_pm_logger.h>
@@ -143,12 +143,12 @@ printk("LM2_PM: Wait %x from %x\n", set_data, set_address);
 
 static int lm2_pm_begin(suspend_state_t state)
 {
-	energyTraceKernel(NULL);
+//	energyTraceKernel(NULL);
 
 	lm2_deeepsleepup_addr_set();
 	printk("[PWRMGR] CPU OFF enter.\n");
 
-	energyTraceKernel(NULL);
+//	energyTraceKernel(NULL);
 	cpu_idle_poll_ctrl(true);
 
         return 0;
@@ -164,7 +164,7 @@ static void lm2_pm_end(void)
 #endif
 
 	printk("[PWRMGR] CPU OFF exit.\n");
-	energyTraceKernel(NULL);
+//	energyTraceKernel(NULL);
 
         cpu_idle_poll_ctrl(false);
 
@@ -216,8 +216,8 @@ static void lm2_pm_suspend(void)
 	unsigned int mpidr, cpu, cluster;
 
 	/* SATA */
-	energyTraceKernel(NULL);
-	kernelGioNegate(OS_GIO_HDD_PWR_CNT);
+//	energyTraceKernel(NULL);
+//	kernelGioNegate(OS_GIO_HDD_PWR_CNT);
 
 	mpidr = read_cpuid_mpidr();
 	cpu = MPIDR_AFFINITY_LEVEL(mpidr, 0);
@@ -227,14 +227,14 @@ static void lm2_pm_suspend(void)
 	BUG_ON(cluster >= LM2_CLUSTERS || cpu >= QUATRO55XX_MAX_CPUS_PER_CLUSTER);
 
 	/* FX */
-	energyTraceKernel(NULL);
+//	energyTraceKernel(NULL);
 	reset_for_swoff_retry();
 
-	overlaySdReset();
-	overlaySdClkDisable();
-	overlayEnergyStateGotoCpuoff();
-	overlayUartReset();
-	overlayUartClkDisable();
+//	overlaySdReset();
+//	overlaySdClkDisable();
+//	overlayEnergyStateGotoCpuoff();
+//	overlayUartReset();
+//	overlayUartClkDisable();
 
 	lm2_suspend_reg_set(LM2_SHARED_MEM_SEND_TO_A7, 0x01);
 	lm2_suspend_wait_reg(LM2_SHARED_MEM_RECV_FROM_A7, 0x81);/*0x81?*/
@@ -254,15 +254,15 @@ static void lm2_pm_suspend(void)
 	lm2_save_a15core();		// Save A15Core C2/C13/SP
 	lm2_wfi0();
 	/************* Resume Start *************/
-	overlayEnergyStateReturnCpuoff();
-	overlayUartClkEnable();
-	overlayUartUnreset();
-	overlaySdClkEnable();
-	overlaySdUnreset();
+//	overlayEnergyStateReturnCpuoff();
+//	overlayUartClkEnable();
+//	overlayUartUnreset();
+//	overlaySdClkEnable();
+//	overlaySdUnreset();
 
 	/* SATA : will be deleted from here */
-	kernelGioAssert(OS_GIO_HDD_PWR_CNT);
-	energyTraceKernel(NULL);
+//	kernelGioAssert(OS_GIO_HDD_PWR_CNT);
+//	energyTraceKernel(NULL);
 
 	//irq_to_a15(LM2_IRQ_CIPUI);	//  64
 	//irq_to_a15(LM2_IRQ_GMACK_STAT);	// 126
@@ -288,26 +288,26 @@ static int lm2_pm_enter(suspend_state_t suspend_state)
 #ifdef  LM2_PM_DEBUG
 printk(KERN_ERR "LM2_PM: Register Save\n");
 #endif
-			energyTraceKernel(NULL);
+//			energyTraceKernel(NULL);
 			stmac_reg_save();
 #ifdef	CONFIG_PCIE_LM2
-			energyTraceKernel(NULL);
+//			energyTraceKernel(NULL);
 			lm2_pcie_suspend();
 #endif
-			energyTraceKernel(NULL);
+//			energyTraceKernel(NULL);
 			dw3_reg_save();
-			energyTraceKernel(NULL);
+//			energyTraceKernel(NULL);
 			lm2_pm_suspend();
 #ifdef  LM2_PM_DEBUG
 printk(KERN_ERR "LM2_PM: Register Load\n");
 #endif
-			energyTraceKernel(NULL);
+//			energyTraceKernel(NULL);
 			dw3_reg_load();
 #ifdef	CONFIG_PCIE_LM2
-			energyTraceKernel(NULL);
+//			energyTraceKernel(NULL);
 			lm2_pcie_resume();
 #endif
-			energyTraceKernel(NULL);
+//			energyTraceKernel(NULL);
 			stmac_reg_load();
 			break;
 		default:
@@ -318,7 +318,7 @@ printk(KERN_ERR "LM2_PM: Register Load\n");
 
 static int lm2_pm_finish(void)
 {
-	energyTraceKernel(NULL);
+//	energyTraceKernel(NULL);
 	return 0;
 }
 
@@ -391,7 +391,7 @@ static int __init lm2_pm_init(void)
 		ret = -ENOMEM;
 	strcpy(&run_flag, "cold boot\n");
 	/* /sys/kernel/debug/pm_stamp */
-	lm2_pm_stamp_sysfs_entry();
+//	lm2_pm_stamp_sysfs_entry();
 #endif
 	return ret;
 }
diff --git a/drivers/Kconfig b/drivers/Kconfig
index 5fb9c47..34647a7 100644
--- a/drivers/Kconfig
+++ b/drivers/Kconfig
@@ -172,6 +172,4 @@ source "drivers/powercap/Kconfig"
 
 source "drivers/phy/Kconfig"
 
-source "drivers/fxmodule/Kconfig"
-
 endmenu
diff --git a/drivers/Makefile b/drivers/Makefile
index 3dd32c9..7fadea3 100644
--- a/drivers/Makefile
+++ b/drivers/Makefile
@@ -156,5 +156,3 @@ obj-$(CONFIG_VME_BUS)		+= vme/
 obj-$(CONFIG_IPACK_BUS)		+= ipack/
 obj-$(CONFIG_NTB)		+= ntb/
 obj-$(CONFIG_POWERCAP)         += powercap/
-obj-$(CONFIG_FXMODULE)          += fxmodule/
-
diff --git a/drivers/base/power/main.c b/drivers/base/power/main.c
index b75b2be..8e46c2e 100644
--- a/drivers/base/power/main.c
+++ b/drivers/base/power/main.c
@@ -698,7 +698,7 @@ void dpm_resume(pm_message_t state)
 
 			mutex_unlock(&dpm_list_mtx);
 
-			energyTraceKernel(dev_name(dev));
+//			energyTraceKernel(dev_name(dev));
 			error = device_resume(dev, state, false);
 			if (error) {
 				suspend_stats.failed_resume++;
@@ -1189,7 +1189,7 @@ int dpm_suspend(pm_message_t state)
 		get_device(dev);
 		mutex_unlock(&dpm_list_mtx);
 
-		energyTraceKernel(dev_name(dev));
+//		energyTraceKernel(dev_name(dev));
 		error = device_suspend(dev);
 
 		mutex_lock(&dpm_list_mtx);
diff --git a/drivers/tty/serial/8250/8250_core.c b/drivers/tty/serial/8250/8250_core.c
index c666ee8..f29c403 100644
--- a/drivers/tty/serial/8250/8250_core.c
+++ b/drivers/tty/serial/8250/8250_core.c
@@ -46,7 +46,7 @@
 #include <asm/io.h>
 #include <asm/irq.h>
 
-#include <linux/fxmodule/fx_uart.h>
+//#include <linux/fxmodule/fx_uart.h>
 
 #include "8250.h"
 /*
@@ -2862,32 +2862,32 @@ static int serial8250_ioctl(struct uart_port *p,
 	if (line < 0) return line;
 
 	switch(cmd) {
-		case UART_SLEEPING:
-			printk(KERN_INFO "8250 UART (%d) : UART_SLEEPING start\n", line);
-
-			mutex_unlock(&tty_p->mutex);
-			uart_suspend_port(&serial8250_reg, p);
-			mutex_lock(&tty_p->mutex);
-
-			printk(KERN_INFO "8250 UART (%d) : UART_SLEEPING end\n", line);
-
-			break;
-
-		case UART_WAKEUP:
-			printk(KERN_INFO "8250 UART (%d) : UART_WAKEUP start\n", line);
-
-			/* if not set, resume doesn't work */
-			set_bit(ASYNCB_SUSPENDED, &tty_p->flags);
-			clear_bit(ASYNCB_INITIALIZED, &tty_p->flags);
-			state->pm_state = UART_PM_STATE_OFF;
-
-			mutex_unlock(&tty_p->mutex);
-			serial8250_resume_port(line);
-			mutex_lock(&tty_p->mutex);
-
-			printk(KERN_INFO "8250 UART (%d) : UART_WAKEUP end\n", line);
-
-			break;
+//		case UART_SLEEPING:
+//			printk(KERN_INFO "8250 UART (%d) : UART_SLEEPING start\n", line);
+//
+//			mutex_unlock(&tty_p->mutex);
+//			uart_suspend_port(&serial8250_reg, p);
+//			mutex_lock(&tty_p->mutex);
+//
+//			printk(KERN_INFO "8250 UART (%d) : UART_SLEEPING end\n", line);
+//
+//			break;
+//
+//		case UART_WAKEUP:
+//			printk(KERN_INFO "8250 UART (%d) : UART_WAKEUP start\n", line);
+//
+//			/* if not set, resume doesn't work */
+//			set_bit(ASYNCB_SUSPENDED, &tty_p->flags);
+//			clear_bit(ASYNCB_INITIALIZED, &tty_p->flags);
+//			state->pm_state = UART_PM_STATE_OFF;
+//
+//			mutex_unlock(&tty_p->mutex);
+//			serial8250_resume_port(line);
+//			mutex_lock(&tty_p->mutex);
+//
+//			printk(KERN_INFO "8250 UART (%d) : UART_WAKEUP end\n", line);
+//
+//			break;
 
 		default:
 			return -ENOIOCTLCMD;
diff --git a/drivers/usb/host/xhci-plat.c b/drivers/usb/host/xhci-plat.c
index 0a1fae6..509c9d7 100644
--- a/drivers/usb/host/xhci-plat.c
+++ b/drivers/usb/host/xhci-plat.c
@@ -25,7 +25,7 @@
 
 #include "xhci.h"
 
-#include <linux/fxmodule/xchi_ioctl.h>
+//#include <linux/fxmodule/xchi_ioctl.h>
 
 static int xchi_cdev_open(struct inode *inode, struct file *filp);
 static int xchi_cdev_release(struct inode *inode, struct file *filp);
@@ -148,12 +148,12 @@ static int xhci_plat_create_dev(struct platform_device *pdev)
 		return status;
 	}
 
-	g_xchi_cdev.dev = device_create(g_xchi_cdev.pclass, NULL, g_xchi_cdev.devno,NULL, XHCI_CDEV_DEVICE);
-	if (IS_ERR(g_xchi_cdev.dev)) {
-		pr_err("Failed to open char device\n");
-		class_destroy(g_xchi_cdev.pclass);
-		return(-ENODEV);
-	}
+//	g_xchi_cdev.dev = device_create(g_xchi_cdev.pclass, NULL, g_xchi_cdev.devno,NULL, XHCI_CDEV_DEVICE);
+//	if (IS_ERR(g_xchi_cdev.dev)) {
+//		pr_err("Failed to open char device\n");
+//		class_destroy(g_xchi_cdev.pclass);
+//		return(-ENODEV);
+//	}
 
 	g_xchi_cdev.pdev=pdev;
 	return 0;
@@ -421,16 +421,16 @@ static long xchi_cdev_ioctl(struct file *filp,unsigned int cmd, unsigned long ar
 	hcd = platform_get_drvdata(pdev);
 
 	switch(cmd) {
-		case XHCI_SLEEPING:
-			//turn off port power of roothub
-			xhci_hub_control(hcd, ClearPortFeature,USB_PORT_FEAT_POWER,1, 0, 0);
-			xhci_hub_control(hcd, ClearPortFeature,USB_PORT_FEAT_POWER,2, 0, 0);
-			break;
-
-		case XHCI_WAKEUP:
-			xhci_hub_control(hcd, SetPortFeature,USB_PORT_FEAT_POWER,1, 0, 0);
-			xhci_hub_control(hcd, SetPortFeature,USB_PORT_FEAT_POWER,2, 0, 0);
-			break;
+//		case XHCI_SLEEPING:
+//			//turn off port power of roothub
+//			xhci_hub_control(hcd, ClearPortFeature,USB_PORT_FEAT_POWER,1, 0, 0);
+//			xhci_hub_control(hcd, ClearPortFeature,USB_PORT_FEAT_POWER,2, 0, 0);
+//			break;
+//
+//		case XHCI_WAKEUP:
+//			xhci_hub_control(hcd, SetPortFeature,USB_PORT_FEAT_POWER,1, 0, 0);
+//			xhci_hub_control(hcd, SetPortFeature,USB_PORT_FEAT_POWER,2, 0, 0);
+//			break;
 		default:
 			return -EINVAL;
 	}
-- 
1.7.1

