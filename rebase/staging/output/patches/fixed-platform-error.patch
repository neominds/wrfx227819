From 0b2577d224019ff5f83a7efe3695343a1ff51c6f Mon Sep 17 00:00:00 2001
From: jthomas <jacob.thomas@windriver.com>
Date: Wed, 11 May 2016 11:33:55 +0900
Subject: [PATCH 046/170] fixed-platform-error


diff --git a/drivers/i2c/busses/i2c-lm2.c b/drivers/i2c/busses/i2c-lm2.c
index 26e3a61..4c208d1 100644
--- a/drivers/i2c/busses/i2c-lm2.c
+++ b/drivers/i2c/busses/i2c-lm2.c
@@ -221,19 +221,22 @@ static int lm2_i2c_probe(struct platform_device *pdev)
 	int 	ret;
 
 	/* sanity check */
+	dev_info(&pdev->dev, "LM2 I2C EEPROM Driver loading\n");
+
 	/* 2 iomem 1 irq */
 	if(pdev->num_resources < 3){
 		dev_err(&pdev->dev,"no resource data\n");
 		return	-ENODEV;
 	}
 	/* get clock data */
+#if 0
 	pd = dev_get_platdata(&pdev->dev);
 	if (!pd) {
 		dev_err(&pdev->dev, "no platform_data!\n");
 		ret = -ENODEV;
 		goto out0;
 	}
-
+#endif
 	/* driver info */
 	id = kzalloc(sizeof(struct lm2_i2c_eeprom), GFP_KERNEL);
 	if (!id) {
@@ -242,6 +245,8 @@ static int lm2_i2c_probe(struct platform_device *pdev)
 		goto out0;
 	}
 
+	platform_set_drvdata(pdev, id);
+
 	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
 	if (!res) {
 		dev_err(&pdev->dev, "no mmio resources\n");
@@ -287,8 +292,8 @@ static int lm2_i2c_probe(struct platform_device *pdev)
 		dev_err(&pdev->dev, "reg adap failed: %d\n", ret);
 		goto out4;
 	}
-
-	platform_set_drvdata(pdev, id);
+	dev_info(&pdev->dev, "I2C Driver Registered iomem = %x misc = %x IRQ = %d\n",
+		id->ioarea, id->iobase, id->irq);
 
 
 	return 0;
@@ -321,6 +326,7 @@ static int lm2_i2c_remove(struct platform_device *pdev)
 	return 0;
 }
 
+
 static struct platform_driver lm2_i2c_drv = {
 	.driver	= {
 		.name	= "lm2-eeprom",
@@ -330,7 +336,20 @@ static struct platform_driver lm2_i2c_drv = {
 	.remove		= lm2_i2c_remove,
 };
 
-module_platform_driver(lm2_i2c_drv);
+/* module_platform_driver(lm2_i2c_drv); */
+
+static	int __init	lm2_i2c_init(void)
+{
+	return	platform_driver_register(&lm2_i2c_drv);
+}
+
+static	void __exit	lm2_i2c_exit(void)
+{
+	platform_driver_unregister(&lm2_i2c_drv);
+}
+
+module_init(lm2_i2c_init);
+module_exit(lm2_i2c_exit);
 
 MODULE_LICENSE("GPL");
 MODULE_DESCRIPTION("LM2 EEPROM driver");
-- 
1.7.1

